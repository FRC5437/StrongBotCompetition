// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveToDistance.h"

const double TARGET_DISTANCE = 132; //inches
const double DISTANCE_TOLERANCE = 2.0; //inches

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

DriveToDistance::DriveToDistance(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::chassis.get());
	Requires(Robot::targeting.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void DriveToDistance::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void DriveToDistance::Execute() {
	Robot::chassis->Drive(0.5, 0.5);
	SmartDashboard::PutNumber("Distance from target", Robot::targeting->GetDistance());

}

// Make this return true when this Command no longer needs to run execute()
bool DriveToDistance::IsFinished() {
    return ((TARGET_DISTANCE + DISTANCE_TOLERANCE > Robot::targeting->GetDistance()) && (TARGET_DISTANCE - DISTANCE_TOLERANCE < Robot::targeting->GetDistance()));
}

// Called once after isFinished returns true
void DriveToDistance::End() {
	Robot::chassis->Drive(0.0, 0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveToDistance::Interrupted() {

}
