// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RotateDegrees.h"

int initDegrees;
int turnDegrees;
bool rightDir;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

RotateDegrees::RotateDegrees(int targetDegrees): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::navX.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::chassis.get());
	degrees = targetDegrees;
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void RotateDegrees::Initialize() {
	Robot::chassis->Enable();
	Robot::chassis->SetSetpoint(degrees);
}
// Called repeatedly when this Command is scheduled to run
void RotateDegrees::Execute() {

}

// Make this return true when this Command no longer needs to run execute()
bool RotateDegrees::IsFinished() {
    return rightDir;
}

// Called once after isFinished returns true
void RotateDegrees::End() {
rightDir = false;
Robot::chassis->Drive(0.0,0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void RotateDegrees::Interrupted() {

}
