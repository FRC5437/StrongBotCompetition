// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
bool fired;

#include "FireBoulder.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

FireBoulder::FireBoulder(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void FireBoulder::Initialize() {
	fired = false;
	Robot::shooter->SpinUpTheWheels();
	//Wait(0.5);
}

// Called repeatedly when this Command is scheduled to run
void FireBoulder::Execute() {
	SmartDashboard::PutNumber("Left Speed", Robot::shooter->GetLeftSpeed());
	SmartDashboard::PutNumber("Right Speed", -Robot::shooter->GetRightSpeed());
	if ((Robot::shooter->GetLeftSpeed() >= -(Robot::shooter->GetRightSpeed() + 20.0))) {
		if ((Robot::shooter->GetLeftSpeed() <= -(Robot::shooter->GetRightSpeed() - 20.0))) {
			Robot::shooter->Fire();
			fired = true;
		}
	}
}

// Make this return true when this Command no longer needs to run execute()
bool FireBoulder::IsFinished() {
    return fired;
}

// Called once after isFinished returns true
void FireBoulder::End() {
	//Robot::shooter->Lower();
	//Wait(2);
	//Robot::shooter->Stop();
	fired = false;
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void FireBoulder::Interrupted() {

}
